corrplot(cor, method = "number", tl.cex = 1)
par(cex = cex.before)
set.seed(123)
red.train <- sample_frac(red.df, size = 1)
train.rows <- as.numeric(rownames(red.train))
red.test <- red.df[-train.rows,]
cor <- cor(as.matrix(red.df[,-12]))
cex.before <- par("cex")
par(cex = 1)
corrplot(cor, method = "number", tl.cex = 1)
par(cex = cex.before)
library(dplyr)
library(ggplot2)
library(tidyr)
library(corrplot)
library(glmnet)
dataset.folder <- "~/Projects/Topics/Data Sets"
red.df <- read.csv(file.path(dataset.folder, "winequality-red.csv"), sep = ";")
red.plot <- gather(red.df, "feature", "value")
ggplot(red.plot, aes(x=feature, y=value)) + geom_boxplot() + facet_wrap(~feature, scales="free")
cor <- cor(as.matrix(red.df[,-12]))
cex.before <- par("cex")
par(cex = 0.8)
corrplot(cor, method = "number", tl.cex = 1)
par(cex = cex.before)
set.seed(123)
red.train <- sample_frac(red.df, size = 1)
train.rows <- as.numeric(rownames(red.train))
red.test <- red.df[-train.rows,]
red.lm <- lm(quality ~ ., data = red.train)
red.lm.pred <- predict(red.lm, newdata = red.test)
sum((red.lm.pred - red.test[,12])^2)
grid <- 10^seq(10,-2, length = 100)
red.ridge <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
red.ridge.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0)
best.ridge.lambda <- red.ridge.cv$lambda.min
plot(red.ridge)
red.ridge.pred <- predict(red.ridge, s = best.ridge.lambda, newx = as.matrix(red.test[,-12]))
sum((red.ridge.pred - red.test[,12])^2)
grid <- 10^seq(10,-2, length = 100)
red.lasso <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1)
best.lasso.lambda <- red.lasso.cv$lambda.min
plot(red.lasso)
red.lasso.pred <- predict(red.lasso, s = best.lasso.lambda, newx = as.matrix(red.test[,-12]))
sum((red.lasso.pred - red.test[,12])^2)
coef(red.lm)
predict(red.ridge, s = best.ridge.lambda, type = "coefficients")
predict(red.lasso, s = best.lasso.lambda, type = "coefficients")
sum((red.lasso.pred - red.test[,12])^2)
View(red.lasso.pred)
set.seed(123)
red.train <- sample_frac(red.df, size = 0.7)
train.rows <- as.numeric(rownames(red.train))
red.test <- red.df[-train.rows,]
red.lm <- lm(quality ~ ., data = red.train)
red.lm.pred <- predict(red.lm, newdata = red.test)
sum((red.lm.pred - red.test[,12])^2)
grid <- 10^seq(10,-2, length = 100)
red.ridge <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
red.ridge.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0)
best.ridge.lambda <- red.ridge.cv$lambda.min
plot(red.ridge)
red.ridge.pred <- predict(red.ridge, s = best.ridge.lambda, newx = as.matrix(red.test[,-12]))
sum((red.ridge.pred - red.test[,12])^2)
grid <- 10^seq(10,-2, length = 100)
red.lasso <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1)
best.lasso.lambda <- red.lasso.cv$lambda.min
plot(red.lasso)
red.lasso.pred <- predict(red.lasso, s = best.lasso.lambda, newx = as.matrix(red.test[,-12]))
sum((red.lasso.pred - red.test[,12])^2)
coef(red.lm)
predict(red.ridge, s = best.ridge.lambda, type = "coefficients")
predict(red.lasso, s = best.lasso.lambda, type = "coefficients")
plot(red.lasso.cv)
plot(red.ridge.cv)
plot(red.lasso, xvar = "deviance")
plot(red.lasso, xvar = "dev")
plot(red.lasso, xvar = "norm")
plot(red.lasso, xvar = "lambda")
plot(red.ridge, xvar = "lambda")
plot(red.lasso.cv)
plot(x = red.lasso.cv$glmnet.fit$dev.ratio, y = red.lasso.cv$cvm)
plot(x = red.lasso.cv$glmnet.fit$dev.ratio[-1], y = red.lasso.cv$cvm)
plot(x = red.lasso.cv$glmnet.fit$dev.ratio[-1], y = red.lasso.cv$cvm, label=TRUE)
plot(red.lasso.cv,label=TRUE)
plot(red.lasso,label=TRUE)
warnings()
plot(red.lasso, xvar=lambda, label=TRUE)
plot(red.lasso, xvar="lambda", label=TRUE)
plot(red.lasso.cv)
abline(v = best.lasso.lambda)
abline(v = log(best.lasso.lambda)
)
abline(v = log(red.lasso.cv$lambda.1se))
?abline
abline(v = log(red.lasso.cv$lambda.1se). col="blue")
abline(v = log(red.lasso.cv$lambda.1se), col="blue")
abline(v = log(red.lasso.cv$lambda.min), col="red")
ggplot(red.lasso.cv, aes(x=log(lambda), y=cvm)) + geom_line()
lasso.plot <- data.frame(red.lasso.cv$lambda, red.lasso.cv$cvm)
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) + geom_line()
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm)
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) + geom_line()
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) + geom_point()
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm)
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) + geom_line() + geom_line(data = ridge.plot, aes(x=log(lambda), y=cvm, colour = "blue"))
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) + geom_line() + geom_line(data = ridge.plot, aes(x=log(lambda), y=cvm), colour = "blue")
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) + geom_line(colour = red) + geom_line(data = ridge.plot, aes(x=log(lambda), y=cvm), colour = "blue")
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=log(lambda), y=cvm), colour = "blue")
red.lasso.cv$lambda
red.lasso.cv$glmnet.fit$lambda
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$lambda[-68])
View(lasso.plot)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$lambda[-100])
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red")
ggplot(ridge.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red")
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio[-68])
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio[-100])
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
red.ridge.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio)
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
View(ridge.plot)
grid <- 10^seq(10,-3, length = 1000)
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
grid <- 10^seq(10,-3, length = 1000)
red.ridge <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
red.ridge.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
best.ridge.lambda <- red.ridge.cv$lambda.min
plot(red.ridge.cv)
red.ridge.pred <- predict(red.ridge, s = best.ridge.lambda, newx = as.matrix(red.test[,-12]))
sum((red.ridge.pred - red.test[,12])^2)
grid <- 10^seq(10,-3, length = 1000)
red.lasso <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
best.lasso.lambda <- red.lasso.cv$lambda.min
plot(red.lasso.cv)
red.lasso.pred <- predict(red.lasso, s = best.lasso.lambda, newx = as.matrix(red.test[,-12]))
sum((red.lasso.pred - red.test[,12])^2)
coef(red.lm)
predict(red.ridge, s = best.ridge.lambda, type = "coefficients")
predict(red.lasso, s = best.lasso.lambda, type = "coefficients")
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio)
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio)
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red")
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio)
ggplot(ridge.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red")
grid <- 10^seq(1,-5, length = 1000)
red.ridge <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
red.ridge.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
best.ridge.lambda <- red.ridge.cv$lambda.min
plot(red.ridge.cv)
red.ridge.pred <- predict(red.ridge, s = best.ridge.lambda, newx = as.matrix(red.test[,-12]))
sum((red.ridge.pred - red.test[,12])^2)
grid <- 10^seq(1,-5, length = 1000)
red.lasso <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
best.lasso.lambda <- red.lasso.cv$lambda.min
plot(red.lasso.cv)
red.lasso.pred <- predict(red.lasso, s = best.lasso.lambda, newx = as.matrix(red.test[,-12]))
sum((red.lasso.pred - red.test[,12])^2)
coef(red.lm)
predict(red.ridge, s = best.ridge.lambda, type = "coefficients")
predict(red.lasso, s = best.lasso.lambda, type = "coefficients")
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio)
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
grid <- 10^seq(1,-6, length = 1000)
red.ridge <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
red.ridge.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
best.ridge.lambda <- red.ridge.cv$lambda.min
plot(red.ridge.cv)
red.ridge.pred <- predict(red.ridge, s = best.ridge.lambda, newx = as.matrix(red.test[,-12]))
sum((red.ridge.pred - red.test[,12])^2)
grid <- 10^seq(1,-6, length = 1000)
red.lasso <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
best.lasso.lambda <- red.lasso.cv$lambda.min
plot(red.lasso.cv)
red.lasso.pred <- predict(red.lasso, s = best.lasso.lambda, newx = as.matrix(red.test[,-12]))
sum((red.lasso.pred - red.test[,12])^2)
coef(red.lm)
predict(red.ridge, s = best.ridge.lambda, type = "coefficients")
predict(red.lasso, s = best.lasso.lambda, type = "coefficients")
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio)
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
grid <- 10^seq(10,-3, length = 100)
red.ridge <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
red.ridge.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
best.ridge.lambda <- red.ridge.cv$lambda.min
plot(red.ridge.cv)
red.ridge.pred <- predict(red.ridge, s = best.ridge.lambda, newx = as.matrix(red.test[,-12]))
sum((red.ridge.pred - red.test[,12])^2)
grid <- 10^seq(10,-3, length = 100)
red.lasso <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
best.lasso.lambda <- red.lasso.cv$lambda.min
plot(red.lasso.cv)
red.lasso.pred <- predict(red.lasso, s = best.lasso.lambda, newx = as.matrix(red.test[,-12]))
sum((red.lasso.pred - red.test[,12])^2)
coef(red.lm)
predict(red.ridge, s = best.ridge.lambda, type = "coefficients")
predict(red.lasso, s = best.lasso.lambda, type = "coefficients")
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio)
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
grid <- 10^seq(10,-2, length = 100)
red.ridge <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
red.ridge.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
best.ridge.lambda <- red.ridge.cv$lambda.min
plot(red.ridge.cv)
red.ridge.pred <- predict(red.ridge, s = best.ridge.lambda, newx = as.matrix(red.test[,-12]))
sum((red.ridge.pred - red.test[,12])^2)
grid <- 10^seq(10,-2, length = 100)
red.lasso <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
best.lasso.lambda <- red.lasso.cv$lambda.min
plot(red.lasso.cv)
red.lasso.pred <- predict(red.lasso, s = best.lasso.lambda, newx = as.matrix(red.test[,-12]))
sum((red.lasso.pred - red.test[,12])^2)
coef(red.lm)
predict(red.ridge, s = best.ridge.lambda, type = "coefficients")
predict(red.lasso, s = best.lasso.lambda, type = "coefficients")
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio)
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
grid <- 10^seq(10,-2, length = 100)
red.ridge <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0, lambda = grid)
red.ridge.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 0)
best.ridge.lambda <- red.ridge.cv$lambda.min
plot(red.ridge.cv)
red.ridge.pred <- predict(red.ridge, s = best.ridge.lambda, newx = as.matrix(red.test[,-12]))
sum((red.ridge.pred - red.test[,12])^2)
grid <- 10^seq(10,-2, length = 100)
red.lasso <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = grid)
red.lasso.cv <- cv.glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1)
best.lasso.lambda <- red.lasso.cv$lambda.min
plot(red.lasso.cv)
red.lasso.pred <- predict(red.lasso, s = best.lasso.lambda, newx = as.matrix(red.test[,-12]))
sum((red.lasso.pred - red.test[,12])^2)
coef(red.lm)
predict(red.ridge, s = best.ridge.lambda, type = "coefficients")
predict(red.lasso, s = best.lasso.lambda, type = "coefficients")
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda, cvm = red.lasso.cv$cvm, dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio)
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda, cvm = red.ridge.cv$cvm, dev = red.ridge.cv$glmnet.fit$dev.ratio[-100])
ggplot(lasso.plot, aes(x=dev, y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=dev, y=cvm), colour = "blue")
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) + geom_line(colour = "red") + geom_line(data = ridge.plot, aes(x=log(lambda), y=cvm), colour = "blue")
test <- glmnet(as.matrix(red.train[,-12]), as.matrix(red.train[,12]), alpha = 1, lambda = best.lasso.lambda)
summary(test)
summary(test$beta)
summary(test$beta@p)
test$beta@p
ggplot(lasso.plot, aes(x=log(lambda), y=cvm), colour = "red") +
geom_line()
ggplot(lasso.plot, aes(x=log(lambda), y=cvm, colour = "red")) +
geom_line()
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) +
geom_line(colour = red) +
geom_line(aes(x=log(lambda), y=cvup))
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) +
geom_line(colour = "red") +
geom_line(aes(x=log(lambda), y=cvup))
asso.plot <- data.frame(lambda = red.lasso.cv$lambda,
cvm = red.lasso.cv$cvm,
cvup = red.lasso.cv$cvup,
cvlo = red.lasso.cv$cvlo,
dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda,
cvm = red.ridge.cv$cvm,
cvup = red.ridge.cv$cvup,
cvlo = red.ridge.cv$cvlo,
dev = red.ridge.cv$glmnet.fit$dev.ratio[-100])
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) +
geom_line(colour = "red")
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) +
geom_line(colour = "red") +
geom_line(aes(x=log(lambda), y=cvup))
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda,
cvm = red.lasso.cv$cvm,
cvup = red.lasso.cv$cvup,
cvlo = red.lasso.cv$cvlo,
dev = red.lasso.cv$glmnet.fit$dev.ratio)
ggplot(lasso.plot, aes(x=log(lambda), y=cvm)) +
geom_line(colour = "red") +
geom_line(aes(x=log(lambda), y=cvup))
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda,
cvm = red.lasso.cv$cvm,
cvup = red.lasso.cv$cvup,
cvlo = red.lasso.cv$cvlo,
dev = red.lasso.cv$glmnet.fit$dev.ratio)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda,
cvm = red.ridge.cv$cvm,
cvup = red.ridge.cv$cvup,
cvlo = red.ridge.cv$cvlo,
dev = red.ridge.cv$glmnet.fit$dev.ratio[-100])
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda,
cvm = red.lasso.cv$cvm,
cvup = red.lasso.cv$cvup,
cvlo = red.lasso.cv$cvlo,
dev = red.lasso.cv$glmnet.fit$dev.ratio,
model = rep("lasso", length(red.lasso.cv$lambda)))
lasso.plot <- data.frame(lambda = red.lasso.cv$lambda,
cvm = red.lasso.cv$cvm,
cvup = red.lasso.cv$cvup,
cvlo = red.lasso.cv$cvlo,
dev = red.lasso.cv$glmnet.fit$dev.ratio,
model = "lasso")
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda,
cvm = red.ridge.cv$cvm,
cvup = red.ridge.cv$cvup,
cvlo = red.ridge.cv$cvlo,
dev = red.ridge.cv$glmnet.fit$dev.ratio[-100],
model = "ridge"
plot.df <- rbind(lasso.plot, ridge.plot)
ridge.plot <- data.frame(lambda = red.ridge.cv$lambda,
cvm = red.ridge.cv$cvm,
cvup = red.ridge.cv$cvup,
cvlo = red.ridge.cv$cvlo,
dev = red.ridge.cv$glmnet.fit$dev.ratio[-100],
model = "ridge")
plot.df <- rbind(lasso.plot, ridge.plot)
ggplot(plot.df, aes(x=log(lambda), y=cvm)) +
geom_line(colour = model)
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model) +
geom_line()
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model) +
geom_line()
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model) + geom_line()
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model)) + geom_line()
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model) + geom_line() + geom_line(aes(x=log(lambda), y=cvup, colour = model))
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model) + geom_line() + geom_line(aes(x=log(lambda), y=cvup))
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model) + geom_line() + geom_line(data=plot.df, aes(x=log(lambda), y=cvup))
ggplot(plot.df, aes(x=log(lambda), y=cvup, colour = model) + geom_line()
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model)) + geom_line() + geom_line(aes(x=log(lambda), y=cvup))
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model)) + geom_line() + geom_line(aes(x=log(lambda), y=cvup), alpha=0.5)
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model)) + geom_line() + geom_line(aes(x=log(lambda), y=cvup), linetype="dash")
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model)) + geom_line() + geom_line(aes(x=log(lambda), y=cvup), linetype=3)
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model)) + geom_line() + geom_line(aes(x=log(lambda), y=cvup), linetype=3) + geom_line(aes(x=log(lambda), y=cvlo), linetype=3)
ggplot(plot.df, aes(x=log(lambda), y=cvm, colour = model)) +
geom_line() +
geom_line(aes(x=log(lambda), y=cvup), linetype=3) +
geom_line(aes(x=log(lambda), y=cvlo), linetype=3) +
scale_color_hue(l=45)
ggplot(plot.df, aes(x=dev, y=cvm, colour=model)) +
geom_line() +
scale_color_hue(l=45)
for (i in 1:10){print(i)}
euclidean_norm <- function(x){return(sqrt(sum(x^2)))}
max_norm <- function(x) {return(max(abs(x)))}
n = 9
N = 3864
M <- matrix(data = rnorm(n*N), nrow = N)
euclid <- rep(0, N)
maxdev <- rep(0, N)
for (i in range(1,N)) {}
for (i in range(1,N)) {}
for (i in range(1,N)) {+}
for (i in range(1,N)) {
euclid[i] <- euclidean_norm(M[i,])
maxdev[i] <- maxdev(M[i,])
}
for (i in range(1,N)) {
euclid[i] <- euclidean_norm(M[i,])
maxdev[i] <- max_norm(M[i,])
}
head(maxdev)
sum(maxdev)
for (i in 1:10) {
print(i)
}
M[1,]
euclidean_norm(M[2,])
for (i in 1:N) {
euclid[i] <- euclidean_norm(M[i,])
maxdev[i] <- max_norm(M[i,])
}
range(1,N)
?range
w1 <- min(euclid)
w2 <- min(maxdev)
w2 <- which.min(maxdev)
w1 <- which.min(euclid)
w1 <- which.min(euclid)
w2 <- which.min(maxdev)
m1 <- min(euclid)
m2 <- min(maxdev)
t1 <- which(euclid == m1)
t2 <- which(maxdev == m2)
install.packages(c('rzmq','repr','IRkernel','IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec()
library(IRkernel)
install.packages(c('rzmq','repr','IRkernel','IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')),
type = 'source')
IRkernel::installspec()
source('~/.active-rstudio-document', echo=TRUE)
actual_p <- 0.5
data <- rbinom(1, size = 100, actual_p)
p <- seq(0, 1, length.out = 100)
?rbinom
data <- rbinom(100, 100, actual_p)
data <- rbinom(100, 1, actual_p)
prior <- runif(100)
plot(p, prior)
plot(p, prior)
prior <- punif(p)
plot(p, prior)
?punif
prior <- dunif(p)
plot(p, prior)
prob_data <- mean(data)
?dbinom
prob_data_p <- dbinom(p, 1, p)
prob_data_p <- dbinom(p, 1, mean(data))
prob_data_p <- qbinom(p, 1, mean(data))
?apply
prob_data_p <- apply(p, function(x) {dbinom(p, size = 1, x)})
prob_data_p <- apply(p, FUN = function(x) {dbinom(p, size = 1, x)})
prob_data_p <- lapply(p, FUN = function(x) {dbinom(p, size = 1, x)})
prob_data_p <- lapply(p, FUN = function(x) {dbinom(x, size = 1, x)})
prob_data_p <- lapply(p, FUN = function(x) {dbinom(mean(data), size = 1, x)})
prob_data_p <- apply(p, FUN = function(x) {dbinom(mean(data), size = 1, x)})
prob_data_p <- sapply(p, FUN = function(x) {dbinom(mean(data), size = 1, x)})
prob_data_p <- sapply(p, FUN = function(x) {rbinom(1, size = 1, x)})
prob_data_p <- sapply(p, FUN = function(x) {rbinom(1, size = 1, x)})
sum(prob_data_p)
plot(p, prior * prob_data_p)
plot(p, prior)
plot(prob_data_p)
hist(prob_data_p)
prob_data_p <- sapply(p, FUN = function(x) {dbinom(sum(data), size = 100, x)})
plot(p, prior)
plot(p, prior * prob_data_p)
for (i in length(n)){
print(i)
}
n = c(0, 1, 2, 4, 25, 50, 100, 500)
for (i in length(n)){
print(i)
}
for (i in 1:length(n)){
print(i)
}
n[1]
n[2]
actual_p <- 0.5
n = c(0, 1, 2, 4, 25, 50, 100, 500)
data <- rbinom(500, 1, actual_p)
p <- seq(0, 1, length.out = 100)
prior <- dunif(p)
par(mfrow=c(4,2))
for (i in 1:length(n)){
prob_data_p <- sapply(p, FUN = function(x) {dbinom(sum(data[1:n[i]]), size = n[i], x)})
plot(p, prior * prob_data_p)
}
actual_p <- 0.5
n = c(0, 1, 2, 4, 25, 50, 100, 500)
data <- rbinom(500, 1, actual_p)
p <- seq(0, 1, length.out = 100)
prior <- dunif(p)
par(mfrow=c(4,2))
for (i in 1:length(n)){
prob_data_p <- sapply(p, FUN = function(x) {dbinom(sum(data[1:n[i]]), size = n[i], x)})
plot(p, prior * prob_data_p / sum(data[1:n[i]]))
}
actual_p <- 0.5
n = c(0, 1, 2, 4, 25, 50, 100, 500)
data <- rbinom(500, 1, actual_p)
p <- seq(0, 1, length.out = 100)
prior <- dunif(p)
par(mfrow=c(4,2))
for (i in 1:length(n)){
prob_data_p <- sapply(p, FUN = function(x) {dbinom(sum(data[1:n[i]]), size = n[i], x)})
plot(p, prior * prob_data_p)
}
actual_p <- 0.9
n = c(0, 1, 2, 4, 25, 50, 100, 500)
data <- rbinom(500, 1, actual_p)
p <- seq(0, 1, length.out = 100)
prior <- dunif(p)
par(mfrow=c(4,2))
for (i in 1:length(n)){
prob_data_p <- sapply(p, FUN = function(x) {dbinom(sum(data[1:n[i]]), size = n[i], x)})
plot(p, prior * prob_data_p)
}
setwd("~/Projects/football_scores/exploratory code")
data <- read.csv("../data/processed/historical_scores.csv")
head(data)
com <- data[complete.cases(data),]
unique(data$season)
df <- read.csv("../data/processed/historical_scores.csv")
unique(df$season)
?read.csv
df <- read.csv("../data/processed/historical_scores.csv", colClasses = c("season" = character))
df <- read.csv("../data/processed/historical_scores.csv", colClasses = c("season" = "character"))
unique(df$season)
col <- df[df$season == "1516"]
col <- df[df$season == "1516",]
head(col)
